{"version":3,"sources":["Home.js","Sketch.js","sketches/circle/circle.js","sketches/circle2/circle2.js","App.js","reportWebVitals.js","index.js"],"names":["Home","setActiveView","className","Sketch","props","p","Error","myRef","React","createRef","this","myP5","p5","current","ref","Component","Circle","setup","createCanvas","draw","background","ellipse","width","height","Circle2","App","useState","activeView","components","setComponents","showHome","showComponents","useEffect","onClick","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"gPAYeA,G,KAVF,SAAC,GAAD,EACXC,cADW,OAGL,oCACI,6BAASC,UAAU,oBACf,4C,4CCHKC,E,kDACnB,WAAYC,GAAQ,IAAD,8BACjB,cAAMA,IAIRD,OAAS,SAACE,GACR,MAAM,IAAIC,MAAJ,0aAJN,EAAKC,MAAQC,IAAMC,YAFF,E,gEA0BjBC,KAAKC,KAAO,IAAIC,IAAGF,KAAKP,OAAQO,KAAKH,MAAMM,W,+BAI3C,OACE,yBAAKC,IAAKJ,KAAKH,Y,GAhCeC,IAAMO,WCFrBC,E,4MACjBb,OAAS,SAACE,GACRA,EAAEY,MAAQ,WACRZ,EAAEa,aAAa,IAAK,MAGtBb,EAAEc,KAAO,WACPd,EAAEe,WAAW,IACbf,EAAEgB,QAAQhB,EAAEiB,MAAQ,EAAGjB,EAAEkB,OAAS,EAAG,O,YARTpB,GCAfqB,E,4MACjBrB,OAAS,SAACE,GACRA,EAAEY,MAAQ,WACRZ,EAAEa,aAAa,IAAK,MAGtBb,EAAEc,KAAO,WACPd,EAAEe,WAAW,KACbf,EAAEgB,QAAQhB,EAAEiB,MAAQ,EAAGjB,EAAEkB,OAAS,EAAG,M,YARRpB,GCyCtBsB,MArCf,WAAgB,IAAD,EACuBC,mBAAS,QADhC,mBACNC,EADM,KACM1B,EADN,OAEuByB,qBAFvB,mBAENE,EAFM,KAEMC,EAFN,KAMPC,EAAW,kBACjB,yBAAK5B,UAAU,iBACX,kBAAC,EAAD,CAAMD,cAAeA,MAInB8B,EAAiB,kBACvB,yBAAK7B,UAAU,mBACZyB,EACG,kBAAC,EAAD,MACA,kBAAC,EAAD,QAaN,OARAK,qBAAU,WAENH,EADiB,SAAfF,EACYG,EAEAC,KAEf,CAACJ,IAGF,yBAAKzB,UAAU,OACd0B,EACD,4BAAQK,QAAS,kBAAMhC,GAAe0B,KAAtC,oBCxBWO,EAdS,SAACC,GACnBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAEnB,IADLC,EACI,EADJA,OAAQC,EACJ,EADIA,OAAQC,EACZ,EADYA,OAAQC,EACpB,EADoBA,OAAQC,EAC5B,EAD4BA,QAEhCJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCHdQ,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,SAM1Bb,K","file":"static/js/main.570dd0a5.chunk.js","sourcesContent":["import React, { useContext, useEffect, useState } from 'react';\r\n\r\nconst Home = ({\r\n  setActiveView,\r\n}) => (\r\n        <>\r\n            <section className=\"sketch-book-home\">\r\n                <p>Home Page</p>\r\n            </section>\r\n        </>\r\n);\r\n\r\nexport default Home;\r\n","import React from 'react';\nimport p5 from 'p5';\nimport './App.css';\n\nexport default class Sketch extends React.Component {\n  constructor(props) {\n    super(props);\n    this.myRef = React.createRef();\n  }\n\n  Sketch = (p) => {\n    throw new Error(\n      `NotImplementedError: must define Sketch method with a setup & draw\n\n        Example:\n        export default class MySketch extends Sketch {\n          Sketch = (p) => {\n            p.sketch = () => {\n              p.createCanvas(512, 512);\n            }\n\n            p.draw = () => {\n              p.background(20);\n              p.ellipse(p.width / 2, p.height / 2, 100);\n            }\n          }\n        }`,\n    );\n  }\n\n  componentDidMount() {\n    this.myP5 = new p5(this.Sketch, this.myRef.current);\n  }\n\n  render() {\n    return (\n      <div ref={this.myRef}>\n\n      </div>\n    );\n  }\n}\n","import Sketch from '../../Sketch';\r\n\r\nexport default class Circle extends Sketch {\r\n    Sketch = (p) => {\r\n      p.setup = () => {\r\n        p.createCanvas(512, 512);\r\n      };\r\n\r\n      p.draw = () => {\r\n        p.background(20);\r\n        p.ellipse(p.width / 2, p.height / 2, 100);\r\n      };\r\n    }\r\n}\r\n","import Sketch from '../../Sketch';\r\n\r\nexport default class Circle2 extends Sketch {\r\n    Sketch = (p) => {\r\n      p.setup = () => {\r\n        p.createCanvas(512, 512);\r\n      };\r\n\r\n      p.draw = () => {\r\n        p.background(150);\r\n        p.ellipse(p.width / 2, p.height / 2, 40);\r\n      };\r\n    }\r\n}\r\n","import React, { useEffect, useState } from 'react';\nimport './App.css';\nimport Home from './Home';\nimport Circle from './sketches/circle/circle';\nimport Circle2 from './sketches/circle2/circle2';\n\nfunction App() {\n  const [activeView, setActiveView] = useState('true');\n  const [components, setComponents] = useState();\n\n  // TODO: Render list of sketch names (or pictures?) along with buttons\n  // for each sketch on Home view. Set active view based on the name\n  const showHome = () => (\n  <div className=\"homeContainer\">\n      <Home setActiveView={setActiveView} />\n  </div>\n  );\n  // Each drawing should have a button to go back home\n  const showComponents = () => (\n  <div className=\"triviaContainer\">\n    {activeView\n      ? <Circle/>\n      : <Circle2/>\n    }\n  </div>\n  );\n\n  useEffect(() => {\n    if (activeView === 'home') {\n      setComponents(showHome);\n    } else {\n      setComponents(showComponents);\n    }\n  }, [activeView]);\n\n  return (\n    <div className=\"App\">\n    {components}\n    <button onClick={() => setActiveView(!activeView)}>Toggle Circles</button>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = (onPerfEntry) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({\n      getCLS, getFID, getFCP, getLCP, getTTFB,\n    }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}